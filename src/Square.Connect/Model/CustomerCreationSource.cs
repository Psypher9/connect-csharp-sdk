/* 
 * Square Connect API
 *
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace Square.Connect.Model
{
    /// <summary>
    /// Indicates the method used to create the customer profile.
    /// </summary>
    /// <value>Indicates the method used to create the customer profile.</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum CustomerCreationSource
    {
        
        /// <summary>
        /// Enum OTHER for "OTHER"
        /// </summary>
        [EnumMember(Value = "OTHER")]
        OTHER,
        
        /// <summary>
        /// Enum APPOINTMENTS for "APPOINTMENTS"
        /// </summary>
        [EnumMember(Value = "APPOINTMENTS")]
        APPOINTMENTS,
        
        /// <summary>
        /// Enum COUPON for "COUPON"
        /// </summary>
        [EnumMember(Value = "COUPON")]
        COUPON,
        
        /// <summary>
        /// Enum DELETIONRECOVERY for "DELETION_RECOVERY"
        /// </summary>
        [EnumMember(Value = "DELETION_RECOVERY")]
        DELETIONRECOVERY,
        
        /// <summary>
        /// Enum DIRECTORY for "DIRECTORY"
        /// </summary>
        [EnumMember(Value = "DIRECTORY")]
        DIRECTORY,
        
        /// <summary>
        /// Enum EGIFTING for "EGIFTING"
        /// </summary>
        [EnumMember(Value = "EGIFTING")]
        EGIFTING,
        
        /// <summary>
        /// Enum EMAILCOLLECTION for "EMAIL_COLLECTION"
        /// </summary>
        [EnumMember(Value = "EMAIL_COLLECTION")]
        EMAILCOLLECTION,
        
        /// <summary>
        /// Enum FEEDBACK for "FEEDBACK"
        /// </summary>
        [EnumMember(Value = "FEEDBACK")]
        FEEDBACK,
        
        /// <summary>
        /// Enum IMPORT for "IMPORT"
        /// </summary>
        [EnumMember(Value = "IMPORT")]
        IMPORT,
        
        /// <summary>
        /// Enum INVOICES for "INVOICES"
        /// </summary>
        [EnumMember(Value = "INVOICES")]
        INVOICES,
        
        /// <summary>
        /// Enum LOYALTY for "LOYALTY"
        /// </summary>
        [EnumMember(Value = "LOYALTY")]
        LOYALTY,
        
        /// <summary>
        /// Enum MARKETING for "MARKETING"
        /// </summary>
        [EnumMember(Value = "MARKETING")]
        MARKETING,
        
        /// <summary>
        /// Enum MERGE for "MERGE"
        /// </summary>
        [EnumMember(Value = "MERGE")]
        MERGE,
        
        /// <summary>
        /// Enum ONLINESTORE for "ONLINE_STORE"
        /// </summary>
        [EnumMember(Value = "ONLINE_STORE")]
        ONLINESTORE,
        
        /// <summary>
        /// Enum INSTANTPROFILE for "INSTANT_PROFILE"
        /// </summary>
        [EnumMember(Value = "INSTANT_PROFILE")]
        INSTANTPROFILE,
        
        /// <summary>
        /// Enum TERMINAL for "TERMINAL"
        /// </summary>
        [EnumMember(Value = "TERMINAL")]
        TERMINAL,
        
        /// <summary>
        /// Enum THIRDPARTY for "THIRD_PARTY"
        /// </summary>
        [EnumMember(Value = "THIRD_PARTY")]
        THIRDPARTY,
        
        /// <summary>
        /// Enum THIRDPARTYIMPORT for "THIRD_PARTY_IMPORT"
        /// </summary>
        [EnumMember(Value = "THIRD_PARTY_IMPORT")]
        THIRDPARTYIMPORT,
        
        /// <summary>
        /// Enum UNMERGERECOVERY for "UNMERGE_RECOVERY"
        /// </summary>
        [EnumMember(Value = "UNMERGE_RECOVERY")]
        UNMERGERECOVERY
    }

}
